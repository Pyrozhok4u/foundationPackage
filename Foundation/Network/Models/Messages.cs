// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: messages.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Foundation.Network {

  /// <summary>Holder for reflection information generated from messages.proto</summary>
  public static partial class MessagesReflection {

    #region Descriptor
    /// <summary>File descriptor for messages.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MessagesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5tZXNzYWdlcy5wcm90bxIIbWVzc2FnZXMipAEKCkNtZFJlcXVlc3QSEQoJ",
            "ZXZlbnROYW1lGAEgASgJEg0KBW1zZ0lkGAIgASgJEgsKA2FwaRgDIAEoCRIO",
            "CgZwYXJhbXMYBCABKAwSEwoLYmVmb3JlRGVsYXkYBSABKAUSEgoKYWZ0ZXJE",
            "ZWxheRgGIAEoBRIWCg5yZXFNZXNzYWdlTmFtZRgHIAEoCRIWCg5yZXNNZXNz",
            "YWdlTmFtZRgIIAEoCSJkCgtDbWRSZXNwb25zZRIRCglldmVudE5hbWUYASAB",
            "KAkSDQoFbXNnSWQYAiABKAkSDwoHc3VjY2VzcxgDIAEoCBIRCgllcnJvckNv",
            "ZGUYBCABKAUSDwoHcGF5bG9hZBgFIAEoDEIVqgISRm91bmRhdGlvbi5OZXR3",
            "b3JrYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Foundation.Network.CmdRequest), global::Foundation.Network.CmdRequest.Parser, new[]{ "EventName", "MsgId", "Api", "Params", "BeforeDelay", "AfterDelay", "ReqMessageName", "ResMessageName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Foundation.Network.CmdResponse), global::Foundation.Network.CmdResponse.Parser, new[]{ "EventName", "MsgId", "Success", "ErrorCode", "Payload" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CmdRequest : pb::IMessage<CmdRequest> {
    private static readonly pb::MessageParser<CmdRequest> _parser = new pb::MessageParser<CmdRequest>(() => new CmdRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CmdRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Foundation.Network.MessagesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CmdRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CmdRequest(CmdRequest other) : this() {
      eventName_ = other.eventName_;
      msgId_ = other.msgId_;
      api_ = other.api_;
      params_ = other.params_;
      beforeDelay_ = other.beforeDelay_;
      afterDelay_ = other.afterDelay_;
      reqMessageName_ = other.reqMessageName_;
      resMessageName_ = other.resMessageName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CmdRequest Clone() {
      return new CmdRequest(this);
    }

    /// <summary>Field number for the "eventName" field.</summary>
    public const int EventNameFieldNumber = 1;
    private string eventName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EventName {
      get { return eventName_; }
      set {
        eventName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "msgId" field.</summary>
    public const int MsgIdFieldNumber = 2;
    private string msgId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MsgId {
      get { return msgId_; }
      set {
        msgId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "api" field.</summary>
    public const int ApiFieldNumber = 3;
    private string api_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Api {
      get { return api_; }
      set {
        api_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "params" field.</summary>
    public const int ParamsFieldNumber = 4;
    private pb::ByteString params_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Params {
      get { return params_; }
      set {
        params_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "beforeDelay" field.</summary>
    public const int BeforeDelayFieldNumber = 5;
    private int beforeDelay_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BeforeDelay {
      get { return beforeDelay_; }
      set {
        beforeDelay_ = value;
      }
    }

    /// <summary>Field number for the "afterDelay" field.</summary>
    public const int AfterDelayFieldNumber = 6;
    private int afterDelay_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AfterDelay {
      get { return afterDelay_; }
      set {
        afterDelay_ = value;
      }
    }

    /// <summary>Field number for the "reqMessageName" field.</summary>
    public const int ReqMessageNameFieldNumber = 7;
    private string reqMessageName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReqMessageName {
      get { return reqMessageName_; }
      set {
        reqMessageName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "resMessageName" field.</summary>
    public const int ResMessageNameFieldNumber = 8;
    private string resMessageName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResMessageName {
      get { return resMessageName_; }
      set {
        resMessageName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CmdRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CmdRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EventName != other.EventName) return false;
      if (MsgId != other.MsgId) return false;
      if (Api != other.Api) return false;
      if (Params != other.Params) return false;
      if (BeforeDelay != other.BeforeDelay) return false;
      if (AfterDelay != other.AfterDelay) return false;
      if (ReqMessageName != other.ReqMessageName) return false;
      if (ResMessageName != other.ResMessageName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EventName.Length != 0) hash ^= EventName.GetHashCode();
      if (MsgId.Length != 0) hash ^= MsgId.GetHashCode();
      if (Api.Length != 0) hash ^= Api.GetHashCode();
      if (Params.Length != 0) hash ^= Params.GetHashCode();
      if (BeforeDelay != 0) hash ^= BeforeDelay.GetHashCode();
      if (AfterDelay != 0) hash ^= AfterDelay.GetHashCode();
      if (ReqMessageName.Length != 0) hash ^= ReqMessageName.GetHashCode();
      if (ResMessageName.Length != 0) hash ^= ResMessageName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EventName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EventName);
      }
      if (MsgId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MsgId);
      }
      if (Api.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Api);
      }
      if (Params.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Params);
      }
      if (BeforeDelay != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(BeforeDelay);
      }
      if (AfterDelay != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(AfterDelay);
      }
      if (ReqMessageName.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ReqMessageName);
      }
      if (ResMessageName.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ResMessageName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EventName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EventName);
      }
      if (MsgId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MsgId);
      }
      if (Api.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Api);
      }
      if (Params.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Params);
      }
      if (BeforeDelay != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BeforeDelay);
      }
      if (AfterDelay != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AfterDelay);
      }
      if (ReqMessageName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReqMessageName);
      }
      if (ResMessageName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResMessageName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CmdRequest other) {
      if (other == null) {
        return;
      }
      if (other.EventName.Length != 0) {
        EventName = other.EventName;
      }
      if (other.MsgId.Length != 0) {
        MsgId = other.MsgId;
      }
      if (other.Api.Length != 0) {
        Api = other.Api;
      }
      if (other.Params.Length != 0) {
        Params = other.Params;
      }
      if (other.BeforeDelay != 0) {
        BeforeDelay = other.BeforeDelay;
      }
      if (other.AfterDelay != 0) {
        AfterDelay = other.AfterDelay;
      }
      if (other.ReqMessageName.Length != 0) {
        ReqMessageName = other.ReqMessageName;
      }
      if (other.ResMessageName.Length != 0) {
        ResMessageName = other.ResMessageName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            EventName = input.ReadString();
            break;
          }
          case 18: {
            MsgId = input.ReadString();
            break;
          }
          case 26: {
            Api = input.ReadString();
            break;
          }
          case 34: {
            Params = input.ReadBytes();
            break;
          }
          case 40: {
            BeforeDelay = input.ReadInt32();
            break;
          }
          case 48: {
            AfterDelay = input.ReadInt32();
            break;
          }
          case 58: {
            ReqMessageName = input.ReadString();
            break;
          }
          case 66: {
            ResMessageName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CmdResponse : pb::IMessage<CmdResponse> {
    private static readonly pb::MessageParser<CmdResponse> _parser = new pb::MessageParser<CmdResponse>(() => new CmdResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CmdResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Foundation.Network.MessagesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CmdResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CmdResponse(CmdResponse other) : this() {
      eventName_ = other.eventName_;
      msgId_ = other.msgId_;
      success_ = other.success_;
      errorCode_ = other.errorCode_;
      payload_ = other.payload_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CmdResponse Clone() {
      return new CmdResponse(this);
    }

    /// <summary>Field number for the "eventName" field.</summary>
    public const int EventNameFieldNumber = 1;
    private string eventName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EventName {
      get { return eventName_; }
      set {
        eventName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "msgId" field.</summary>
    public const int MsgIdFieldNumber = 2;
    private string msgId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MsgId {
      get { return msgId_; }
      set {
        msgId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 3;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "errorCode" field.</summary>
    public const int ErrorCodeFieldNumber = 4;
    private int errorCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = value;
      }
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 5;
    private pb::ByteString payload_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Payload {
      get { return payload_; }
      set {
        payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CmdResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CmdResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EventName != other.EventName) return false;
      if (MsgId != other.MsgId) return false;
      if (Success != other.Success) return false;
      if (ErrorCode != other.ErrorCode) return false;
      if (Payload != other.Payload) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EventName.Length != 0) hash ^= EventName.GetHashCode();
      if (MsgId.Length != 0) hash ^= MsgId.GetHashCode();
      if (Success != false) hash ^= Success.GetHashCode();
      if (ErrorCode != 0) hash ^= ErrorCode.GetHashCode();
      if (Payload.Length != 0) hash ^= Payload.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EventName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EventName);
      }
      if (MsgId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MsgId);
      }
      if (Success != false) {
        output.WriteRawTag(24);
        output.WriteBool(Success);
      }
      if (ErrorCode != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ErrorCode);
      }
      if (Payload.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(Payload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EventName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EventName);
      }
      if (MsgId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MsgId);
      }
      if (Success != false) {
        size += 1 + 1;
      }
      if (ErrorCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ErrorCode);
      }
      if (Payload.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Payload);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CmdResponse other) {
      if (other == null) {
        return;
      }
      if (other.EventName.Length != 0) {
        EventName = other.EventName;
      }
      if (other.MsgId.Length != 0) {
        MsgId = other.MsgId;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      if (other.ErrorCode != 0) {
        ErrorCode = other.ErrorCode;
      }
      if (other.Payload.Length != 0) {
        Payload = other.Payload;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            EventName = input.ReadString();
            break;
          }
          case 18: {
            MsgId = input.ReadString();
            break;
          }
          case 24: {
            Success = input.ReadBool();
            break;
          }
          case 32: {
            ErrorCode = input.ReadInt32();
            break;
          }
          case 42: {
            Payload = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
